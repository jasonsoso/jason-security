<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/util  
     http://www.springframework.org/schema/util/spring-util-3.0.xsd"
    default-lazy-init="true">
	
	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    	<property name="securityManager" ref="securityManager"/>
	    <property name="loginUrl" value="${sso.loginurlpre}/login?service=${sso.currurlpre}/shiro-cas" /> 

	    <!-- 要求登录时的链接 
        <property name="loginUrl" value="/login" />-->
	    <!-- 登陆成功后要跳转的连接 -->
        <property name="successUrl" value="/admin/" />
        
	    <!-- 未授权时要跳转的连接 -->
	    <property name="unauthorizedUrl" value="/admin/deny/" />

	    <property name="filters">
	        <util:map>
	            <!-- 添加casFilter到shiroFilter -->  
                <entry key="casFilter" value-ref="casFilter"/>  
                <entry key="logoutFilter" value-ref="logoutFilter" />
	        </util:map> 
	    </property>
    	<property name="filterChainDefinitions">
        	<value>
                /shiro-cas** = casFilter
                /logout** = logoutFilter
                
	            /admin/** = authc
	            
	            /security/** = authc,roles[admin]
	            
	             #/security/authority/list** = authc,perms[authority:list]
	             #/security/authority/create** = authc,perms[authority:create]
	             #/security/authority/edit/** = authc,perms[authority:edit]
	             #/security/authority/delete/** = authc,perms[authority:delete]
	           
	            # more URL-to-FilterChain definitions here
	            
	            /** = anon
        	</value>
    	</property>
	</bean>
	
	<bean id="casFilter" class="org.apache.shiro.cas.CasFilter">  
        <!-- 配置验证错误时的失败页面  -->  
        <property name="failureUrl" value="/common/error.jsp"/>  
    </bean>
    
    <bean  id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">  
    	<!--LogoutFilter清除了应用的cookie/session后，还要重定向到sso-server清除票据的cookie/session等-->
        <property name="redirectUrl" value="${sso.loginurlpre}/logout?service=${sso.currurlpre}"/>  
    </bean>  
    
	<bean id="realm" class="com.jason.security.realm.MyCasRealm" >
	   <property name="cacheManager" ref="shiroCacheManager"/> 
	   <property name="casServerUrlPrefix" value="${sso.loginurlpre}"/>  
       <property name="casService" value="${sso.currurlpre}/shiro-cas"/>  
	</bean>
	
	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager" >
    	<property name="realm" ref="realm"/>
	</bean>
	<!-- 用户授权信息Cache, 采用EhCache -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
<!-- 	   <property name="cacheManagerConfigFile" value="classpath:/META-INF/ehcache/ehcache-hibernate.xml"/> -->
	</bean> 
 
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>
